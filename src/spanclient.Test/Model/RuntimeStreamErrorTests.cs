/* 
 * The Span API
 *
 * API for device, collection, output and firmware management
 *
 * The version of the OpenAPI document: 4.0.12 reported-davon
 * Contact: dev@lab5e.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using spanclient.Api;
using spanclient.Model;
using spanclient.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace spanclient.Test
{
    /// <summary>
    ///  Class for testing RuntimeStreamError
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class RuntimeStreamErrorTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for RuntimeStreamError
        //private RuntimeStreamError instance;

        public RuntimeStreamErrorTests()
        {
            // TODO uncomment below to create an instance of RuntimeStreamError
            //instance = new RuntimeStreamError();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of RuntimeStreamError
        /// </summary>
        [Fact]
        public void RuntimeStreamErrorInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" RuntimeStreamError
            //Assert.IsInstanceOfType<RuntimeStreamError> (instance, "variable 'instance' is a RuntimeStreamError");
        }


        /// <summary>
        /// Test the property 'GrpcCode'
        /// </summary>
        [Fact]
        public void GrpcCodeTest()
        {
            // TODO unit test for the property 'GrpcCode'
        }
        /// <summary>
        /// Test the property 'HttpCode'
        /// </summary>
        [Fact]
        public void HttpCodeTest()
        {
            // TODO unit test for the property 'HttpCode'
        }
        /// <summary>
        /// Test the property 'Message'
        /// </summary>
        [Fact]
        public void MessageTest()
        {
            // TODO unit test for the property 'Message'
        }
        /// <summary>
        /// Test the property 'HttpStatus'
        /// </summary>
        [Fact]
        public void HttpStatusTest()
        {
            // TODO unit test for the property 'HttpStatus'
        }
        /// <summary>
        /// Test the property 'Details'
        /// </summary>
        [Fact]
        public void DetailsTest()
        {
            // TODO unit test for the property 'Details'
        }

    }

}
