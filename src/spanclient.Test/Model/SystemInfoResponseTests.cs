/* 
 * The Span API
 *
 * API for device, collection, output and firmware management
 *
 * The version of the OpenAPI document: 4.1.3 factual-kahlil
 * Contact: dev@lab5e.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using spanclient.Api;
using spanclient.Model;
using spanclient.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace spanclient.Test
{
    /// <summary>
    ///  Class for testing SystemInfoResponse
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class SystemInfoResponseTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for SystemInfoResponse
        //private SystemInfoResponse instance;

        public SystemInfoResponseTests()
        {
            // TODO uncomment below to create an instance of SystemInfoResponse
            //instance = new SystemInfoResponse();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SystemInfoResponse
        /// </summary>
        [Fact]
        public void SystemInfoResponseInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" SystemInfoResponse
            //Assert.IsInstanceOfType<SystemInfoResponse> (instance, "variable 'instance' is a SystemInfoResponse");
        }


        /// <summary>
        /// Test the property 'Version'
        /// </summary>
        [Fact]
        public void VersionTest()
        {
            // TODO unit test for the property 'Version'
        }
        /// <summary>
        /// Test the property 'BuildDate'
        /// </summary>
        [Fact]
        public void BuildDateTest()
        {
            // TODO unit test for the property 'BuildDate'
        }
        /// <summary>
        /// Test the property 'ReleaseName'
        /// </summary>
        [Fact]
        public void ReleaseNameTest()
        {
            // TODO unit test for the property 'ReleaseName'
        }
        /// <summary>
        /// Test the property 'DefaultFieldMask'
        /// </summary>
        [Fact]
        public void DefaultFieldMaskTest()
        {
            // TODO unit test for the property 'DefaultFieldMask'
        }
        /// <summary>
        /// Test the property 'ForcedFieldMask'
        /// </summary>
        [Fact]
        public void ForcedFieldMaskTest()
        {
            // TODO unit test for the property 'ForcedFieldMask'
        }

    }

}
